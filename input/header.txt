WINGDIAPI int WINAPI AddFontResourceA(_In_ LPCSTR arg1);
WINGDIAPI int WINAPI AddFontResourceW(_In_ LPCWSTR arg2);
WINGDIAPI BOOL WINAPI AnimatePalette(_In_ HPALETTE hPal, _In_ UINT iStartIndex, _In_ UINT cEntries, _In_reads_(cEntries) CONST PALETTEENTRY * ppe);
WINGDIAPI BOOL WINAPI Arc(_In_ HDC hdc, _In_ int x1, _In_ int y1, _In_ int x2, _In_ int y2, _In_ int x3, _In_ int y3, _In_ int x4, _In_ int y4);
WINGDIAPI BOOL WINAPI BitBlt(_In_ HDC hdc, _In_ int x, _In_ int y, _In_ int cx, _In_ int cy, _In_opt_ HDC hdcSrc, _In_ int x1, _In_ int y1, _In_ DWORD rop);
WINGDIAPI BOOL WINAPI CancelDC(_In_ HDC hdc);
WINGDIAPI BOOL WINAPI Chord(_In_ HDC hdc, _In_ int x1, _In_ int y1, _In_ int x2, _In_ int y2, _In_ int x3, _In_ int y3, _In_ int x4, _In_ int y4);
WINGDIAPI int WINAPI ChoosePixelFormat(_In_ HDC hdc, _In_ CONST PIXELFORMATDESCRIPTOR *ppfd);
WINGDIAPI HMETAFILE WINAPI CloseMetaFile(_In_ HDC hdc);
WINGDIAPI int WINAPI CombineRgn(_In_opt_ HRGN hrgnDst, _In_opt_ HRGN hrgnSrc1, _In_opt_ HRGN hrgnSrc2, _In_ int iMode);
WINGDIAPI HMETAFILE WINAPI CopyMetaFileA(_In_ HMETAFILE, _In_opt_ LPCSTR);
WINGDIAPI HMETAFILE WINAPI CopyMetaFileW(_In_ HMETAFILE, _In_opt_ LPCWSTR);
WINGDIAPI HBITMAP WINAPI CreateBitmap(_In_ int nWidth, _In_ int nHeight, _In_ UINT nPlanes, _In_ UINT nBitCount, _In_opt_ CONST VOID *lpBits);
WINGDIAPI HBITMAP WINAPI CreateBitmapIndirect(_In_ CONST BITMAP *pbm);
WINGDIAPI HBRUSH WINAPI CreateBrushIndirect(_In_ CONST LOGBRUSH *plbrush);
WINGDIAPI HBITMAP WINAPI CreateCompatibleBitmap(_In_ HDC hdc, _In_ int cx, _In_ int cy);
WINGDIAPI HBITMAP WINAPI CreateDiscardableBitmap(_In_ HDC hdc, _In_ int cx, _In_ int cy);
WINGDIAPI HDC WINAPI CreateCompatibleDC(_In_opt_ HDC hdc);
WINGDIAPI HDC WINAPI CreateDCA(_In_opt_ LPCSTR pwszDriver, _In_opt_ LPCSTR pwszDevice, _In_opt_ LPCSTR pszPort, _In_opt_ CONST DEVMODEA * pdm);
WINGDIAPI HDC WINAPI CreateDCW(_In_opt_ LPCWSTR pwszDriver, _In_opt_ LPCWSTR pwszDevice, _In_opt_ LPCWSTR pszPort, _In_opt_ CONST DEVMODEW * pdm);
WINGDIAPI HBITMAP WINAPI CreateDIBitmap(_In_ HDC hdc, _In_opt_ CONST BITMAPINFOHEADER *pbmih, _In_ DWORD flInit, _In_opt_ CONST VOID *pjBits, _In_opt_ CONST BITMAPINFO *pbmi, _In_ UINT iUsage);
WINGDIAPI HBRUSH WINAPI CreateDIBPatternBrush(_In_ HGLOBAL h, _In_ UINT iUsage);
WINGDIAPI HBRUSH WINAPI CreateDIBPatternBrushPt(_In_ CONST VOID *lpPackedDIB, _In_ UINT iUsage);
WINGDIAPI HRGN WINAPI CreateEllipticRgn(_In_ int x1, _In_ int y1, _In_ int x2, _In_ int y2);
WINGDIAPI HRGN WINAPI CreateEllipticRgnIndirect(_In_ CONST RECT *lprect);
WINGDIAPI HFONT WINAPI CreateFontIndirectA(_In_ CONST LOGFONTA *lplf);
WINGDIAPI HFONT WINAPI CreateFontIndirectW(_In_ CONST LOGFONTW *lplf);
WINGDIAPI HFONT WINAPI CreateFontA(_In_ int cHeight, _In_ int cWidth, _In_ int cEscapement, _In_ int cOrientation, _In_ int cWeight, _In_ DWORD bItalic, _In_ DWORD bUnderline, _In_ DWORD bStrikeOut, _In_ DWORD iCharSet, _In_ DWORD iOutPrecision, _In_ DWORD iClipPrecision,_In_ DWORD iQuality, _In_ DWORD iPitchAndFamily, _In_opt_ LPCSTR pszFaceName);
WINGDIAPI HFONT WINAPI CreateFontW(_In_ int cHeight, _In_ int cWidth, _In_ int cEscapement, _In_ int cOrientation, _In_ int cWeight, _In_ DWORD bItalic, _In_ DWORD bUnderline, _In_ DWORD bStrikeOut, _In_ DWORD iCharSet, _In_ DWORD iOutPrecision, _In_ DWORD iClipPrecision,_In_ DWORD iQuality, _In_ DWORD iPitchAndFamily, _In_opt_ LPCWSTR pszFaceName);
WINGDIAPI HBRUSH WINAPI CreateHatchBrush(_In_ int iHatch, _In_ COLORREF color);
WINGDIAPI HDC WINAPI CreateICA(_In_opt_ LPCSTR pszDriver, _In_opt_ LPCSTR pszDevice, _In_opt_ LPCSTR pszPort, _In_opt_ CONST DEVMODEA * pdm);
WINGDIAPI HDC WINAPI CreateICW(_In_opt_ LPCWSTR pszDriver, _In_opt_ LPCWSTR pszDevice, _In_opt_ LPCWSTR pszPort, _In_opt_ CONST DEVMODEW * pdm);
WINGDIAPI HDC WINAPI CreateMetaFileA(_In_opt_ LPCSTR pszFile);
WINGDIAPI HDC WINAPI CreateMetaFileW(_In_opt_ LPCWSTR pszFile);
WINGDIAPI HPALETTE WINAPI CreatePalette(_In_reads_(_Inexpressible_(2*sizeof(WORD) + plpal->palNumEntries * sizeof(PALETTEENTRY))) CONST LOGPALETTE * plpal);
WINGDIAPI HPEN WINAPI CreatePen(_In_ int iStyle, _In_ int cWidth, _In_ COLORREF color);
WINGDIAPI HPEN WINAPI CreatePenIndirect(_In_ CONST LOGPEN *plpen);
WINGDIAPI HRGN WINAPI CreatePolyPolygonRgn(_In_ CONST POINT *pptl, _In_reads_(cPoly) CONST INT *pc, _In_ int cPoly,_In_ int iMode);
WINGDIAPI HBRUSH WINAPI CreatePatternBrush(_In_ HBITMAP hbm);
WINGDIAPI HRGN WINAPI CreateRectRgn(_In_ int x1, _In_ int y1, _In_ int x2, _In_ int y2);
WINGDIAPI HRGN WINAPI CreateRectRgnIndirect(_In_ CONST RECT *lprect);
WINGDIAPI HRGN WINAPI CreateRoundRectRgn(_In_ int x1, _In_ int y1, _In_ int x2, _In_ int y2, _In_ int w, _In_ int h);
WINGDIAPI BOOL WINAPI CreateScalableFontResourceA(_In_ DWORD fdwHidden, _In_ LPCSTR lpszFont, _In_ LPCSTR lpszFile, _In_opt_ LPCSTR lpszPath);
WINGDIAPI BOOL WINAPI CreateScalableFontResourceW(_In_ DWORD fdwHidden, _In_ LPCWSTR lpszFont, _In_ LPCWSTR lpszFile, _In_opt_ LPCWSTR lpszPath);
WINGDIAPI HBRUSH WINAPI CreateSolidBrush(_In_ COLORREF color);
WINGDIAPI BOOL WINAPI DeleteDC(_In_ HDC hdc);
WINGDIAPI BOOL WINAPI DeleteMetaFile(_In_ HMETAFILE hmf);
WINGDIAPI BOOL WINAPI DeleteObject(_In_ HGDIOBJ ho);
WINGDIAPI int WINAPI DescribePixelFormat(_In_ HDC hdc, _In_ int iPixelFormat, _In_ UINT nBytes,_Out_writes_bytes_opt_(nBytes) LPPIXELFORMATDESCRIPTOR ppfd);
WINGDIAPI int WINAPI DrawEscape(_In_ HDC hdc, _In_ int iEscape, _In_ int cjIn,_In_reads_bytes_opt_(cjIn) LPCSTR lpIn);
WINGDIAPI BOOL WINAPI Ellipse(_In_ HDC hdc, _In_ int left, _In_ int top, _In_ int right, _In_ int bottom);
WINGDIAPI int WINAPI EnumFontFamiliesExA(_In_ HDC hdc, _In_ LPLOGFONTA lpLogfont, _In_ FONTENUMPROCA lpProc, _In_ LPARAM lParam, _In_ DWORD dwFlags);
WINGDIAPI int WINAPI EnumFontFamiliesExW(_In_ HDC hdc, _In_ LPLOGFONTW lpLogfont, _In_ FONTENUMPROCW lpProc, _In_ LPARAM lParam, _In_ DWORD dwFlags);
WINGDIAPI int WINAPI EnumFontFamiliesA(_In_ HDC hdc, _In_opt_ LPCSTR lpLogfont, _In_ FONTENUMPROCA lpProc, _In_ LPARAM lParam);
WINGDIAPI int WINAPI EnumFontFamiliesW(_In_ HDC hdc, _In_opt_ LPCWSTR lpLogfont, _In_ FONTENUMPROCW lpProc, _In_ LPARAM lParam);
WINGDIAPI int WINAPI EnumFontsA(_In_ HDC hdc, _In_opt_ LPCSTR lpLogfont, _In_ FONTENUMPROCA lpProc, _In_ LPARAM lParam);
WINGDIAPI int WINAPI EnumFontsW(_In_ HDC hdc, _In_opt_ LPCWSTR lpLogfont, _In_ FONTENUMPROCW lpProc, _In_ LPARAM lParam);
WINGDIAPI int WINAPI EnumObjects(_In_ HDC hdc, _In_ int nType, _In_ GOBJENUMPROC lpFunc, _In_ LPARAM lParam);
WINGDIAPI int WINAPI EnumObjects(_In_ HDC hdc, _In_ int nType, _In_ GOBJENUMPROC lpFunc, _In_ LPVOID lParam);
WINGDIAPI BOOL WINAPI EqualRgn(_In_ HRGN hrgn1, _In_ HRGN hrgn2);
WINGDIAPI int WINAPI Escape(_In_ HDC hdc, _In_ int iEscape, _In_ int cjIn, _In_reads_bytes_opt_(cjIn) LPCSTR pvIn,_Out_opt_ LPVOID pvOut);
WINGDIAPI int WINAPI ExtEscape(_In_ HDC hdc, _In_ int iEscape, _In_ int cjInput, _In_reads_bytes_opt_(cjInput) LPCSTR lpInData, _In_ int cjOutput,_Out_writes_bytes_opt_(cjOutput) LPSTR lpOutData);
WINGDIAPI int WINAPI ExcludeClipRect(_In_ HDC hdc, _In_ int left, _In_ int top, _In_ int right, _In_ int bottom);
WINGDIAPI HRGN WINAPI ExtCreateRegion(_In_opt_ CONST XFORM * lpx, _In_ DWORD nCount, _In_reads_bytes_(nCount) CONST RGNDATA * lpData);
WINGDIAPI BOOL WINAPI ExtFloodFill(_In_ HDC hdc, _In_ int x, _In_ int y, _In_ COLORREF color, _In_ UINT type);
WINGDIAPI BOOL WINAPI FillRgn(_In_ HDC hdc, _In_ HRGN hrgn, _In_ HBRUSH hbr);
WINGDIAPI BOOL WINAPI FloodFill(_In_ HDC hdc, _In_ int x, _In_ int y, _In_ COLORREF color);
WINGDIAPI BOOL WINAPI FrameRgn(_In_ HDC hdc, _In_ HRGN hrgn, _In_ HBRUSH hbr, _In_ int w, _In_ int h);
WINGDIAPI int WINAPI GetROP2(_In_ HDC hdc);
WINGDIAPI BOOL WINAPI GetAspectRatioFilterEx(_In_ HDC hdc, _Out_ LPSIZE lpsize);
WINGDIAPI COLORREF WINAPI GetBkColor(_In_ HDC hdc);
WINGDIAPI COLORREF WINAPI GetDCBrushColor(_In_ HDC hdc);
WINGDIAPI COLORREF WINAPI GetDCPenColor(_In_ HDC hdc);
WINGDIAPI int WINAPI GetBkMode(_In_ HDC hdc);
WINGDIAPI LONG WINAPI GetBitmapBits(_In_ HBITMAP hbit, _In_ LONG cb, _Out_writes_bytes_(cb) LPVOID lpvBits);
WINGDIAPI BOOL WINAPI GetBitmapDimensionEx(_In_ HBITMAP hbit, _Out_ LPSIZE lpsize);
WINGDIAPI UINT WINAPI GetBoundsRect(_In_ HDC hdc, _Out_ LPRECT lprect, _In_ UINT flags);
WINGDIAPI BOOL WINAPI GetBrushOrgEx(_In_ HDC hdc, _Out_ LPPOINT lppt);
WINGDIAPI BOOL WINAPI GetCharWidthA(_In_ HDC hdc, _In_ UINT iFirst, _In_ UINT iLast, _Out_writes_(iLast + 1 - iFirst) LPINT lpBuffer);
WINGDIAPI BOOL WINAPI GetCharWidthW(_In_ HDC hdc, _In_ UINT iFirst, _In_ UINT iLast, _Out_writes_(iLast + 1 - iFirst) LPINT lpBuffer);
WINGDIAPI BOOL WINAPI GetCharWidth32A(_In_ HDC hdc, _In_ UINT iFirst, _In_ UINT iLast, _Out_writes_(iLast + 1 - iFirst) LPINT lpBuffer);
WINGDIAPI BOOL WINAPI GetCharWidth32W(_In_ HDC hdc, _In_ UINT iFirst, _In_ UINT iLast, _Out_writes_(iLast + 1 - iFirst) LPINT lpBuffer);
WINGDIAPI BOOL APIENTRY GetCharWidthFloatA(_In_ HDC hdc, _In_ UINT iFirst, _In_ UINT iLast, _Out_writes_(iLast + 1 - iFirst) PFLOAT lpBuffer);
WINGDIAPI BOOL APIENTRY GetCharWidthFloatW(_In_ HDC hdc, _In_ UINT iFirst, _In_ UINT iLast, _Out_writes_(iLast + 1 - iFirst) PFLOAT lpBuffer);
WINGDIAPI BOOL APIENTRY GetCharABCWidthsA(_In_ HDC hdc, _In_ UINT wFirst, _In_ UINT wLast,_Out_writes_(wLast - wFirst + 1) LPABC lpABC);
WINGDIAPI BOOL APIENTRY GetCharABCWidthsW(_In_ HDC hdc, _In_ UINT wFirst, _In_ UINT wLast,_Out_writes_(wLast - wFirst + 1) LPABC lpABC);
WINGDIAPI BOOL APIENTRY GetCharABCWidthsFloatA(_In_ HDC hdc, _In_ UINT iFirst, _In_ UINT iLast, _Out_writes_(iLast + 1 - iFirst) LPABCFLOAT lpABC);
WINGDIAPI BOOL APIENTRY GetCharABCWidthsFloatW(_In_ HDC hdc, _In_ UINT iFirst, _In_ UINT iLast, _Out_writes_(iLast + 1 - iFirst) LPABCFLOAT lpABC);
WINGDIAPI int WINAPI GetClipBox(_In_ HDC hdc, _Out_ LPRECT lprect);
WINGDIAPI int WINAPI GetClipRgn(_In_ HDC hdc, _In_ HRGN hrgn);
WINGDIAPI int WINAPI GetMetaRgn(_In_ HDC hdc, _In_ HRGN hrgn);
WINGDIAPI HGDIOBJ WINAPI GetCurrentObject(_In_ HDC hdc, _In_ UINT type);
WINGDIAPI BOOL WINAPI GetCurrentPositionEx(_In_ HDC hdc, _Out_ LPPOINT lppt);
WINGDIAPI int WINAPI GetDeviceCaps(_In_opt_ HDC hdc, _In_ int index);
WINGDIAPI int WINAPI GetDIBits(_In_ HDC hdc, _In_ HBITMAP hbm, _In_ UINT start, _In_ UINT cLines, _Out_opt_ LPVOID lpvBits, _Inout_ LPBITMAPINFO lpbmi, _In_ UINT usage);
WINGDIAPI DWORD WINAPI GetFontData (_In_ HDC hdc, _In_ DWORD dwTable, _In_ DWORD dwOffset, _Out_writes_bytes_to_opt_(cjBuffer, return) PVOID pvBuffer, _In_ DWORD cjBuffer);
WINGDIAPI DWORD WINAPI GetGlyphOutlineA(_In_ HDC hdc, _In_ UINT uChar, _In_ UINT fuFormat, _Out_ LPGLYPHMETRICS lpgm, _In_ DWORD cjBuffer, _Out_writes_bytes_opt_(cjBuffer) LPVOID pvBuffer, _In_ CONST MAT2 *lpmat2);
WINGDIAPI DWORD WINAPI GetGlyphOutlineW(_In_ HDC hdc, _In_ UINT uChar, _In_ UINT fuFormat, _Out_ LPGLYPHMETRICS lpgm, _In_ DWORD cjBuffer, _Out_writes_bytes_opt_(cjBuffer) LPVOID pvBuffer, _In_ CONST MAT2 *lpmat2);
WINGDIAPI int WINAPI GetGraphicsMode(_In_ HDC hdc);
WINGDIAPI int WINAPI GetMapMode(_In_ HDC hdc);
WINGDIAPI UINT WINAPI GetMetaFileBitsEx(_In_ HMETAFILE hMF, _In_ UINT cbBuffer, _Out_writes_bytes_opt_(cbBuffer) LPVOID lpData);
WINGDIAPI HMETAFILE WINAPI GetMetaFileA(_In_ LPCSTR lpName);
WINGDIAPI HMETAFILE WINAPI GetMetaFileW(_In_ LPCWSTR lpName);
WINGDIAPI COLORREF WINAPI GetNearestColor(_In_ HDC hdc, _In_ COLORREF color);
WINGDIAPI UINT WINAPI GetNearestPaletteIndex(_In_ HPALETTE h, _In_ COLORREF color);
WINGDIAPI DWORD WINAPI GetObjectType(_In_ HGDIOBJ h);
WINGDIAPI UINT APIENTRY GetOutlineTextMetricsA(_In_ HDC hdc, _In_ UINT cjCopy,_Out_writes_bytes_opt_(cjCopy) LPOUTLINETEXTMETRICA potm);
WINGDIAPI UINT APIENTRY GetOutlineTextMetricsW(_In_ HDC hdc, _In_ UINT cjCopy,_Out_writes_bytes_opt_(cjCopy) LPOUTLINETEXTMETRICW potm);
WINGDIAPI UINT WINAPI GetPaletteEntries(_In_ HPALETTE hpal, _In_ UINT iStart, _In_ UINT cEntries,_Out_writes_to_opt_(cEntries,return) LPPALETTEENTRY pPalEntries);
WINGDIAPI COLORREF WINAPI GetPixel(_In_ HDC hdc, _In_ int x, _In_ int y);
WINGDIAPI int WINAPI GetPixelFormat(_In_ HDC hdc);
WINGDIAPI int WINAPI GetPolyFillMode(_In_ HDC hdc);
WINGDIAPI BOOL WINAPI GetRasterizerCaps(_Out_writes_bytes_(cjBytes) LPRASTERIZER_STATUS lpraststat,_In_ UINT cjBytes);
WINGDIAPI int WINAPI GetRandomRgn (_In_ HDC hdc, _In_ HRGN hrgn, _In_ INT i);
WINGDIAPI DWORD WINAPI GetRegionData(_In_ HRGN hrgn, _In_ DWORD nCount,_Out_writes_bytes_to_opt_(nCount, return) LPRGNDATA lpRgnData);
WINGDIAPI int WINAPI GetRgnBox(_In_ HRGN hrgn, _Out_ LPRECT lprc);
WINGDIAPI HGDIOBJ WINAPI GetStockObject(_In_ int i);
WINGDIAPI int WINAPI GetStretchBltMode(_In_ HDC hdc);
WINGDIAPI UINT WINAPI GetSystemPaletteEntries(_In_ HDC hdc, _In_ UINT iStart, _In_ UINT cEntries, _Out_writes_opt_(cEntries) LPPALETTEENTRY pPalEntries);
WINGDIAPI UINT WINAPI GetSystemPaletteUse(_In_ HDC hdc);
WINGDIAPI int WINAPI GetTextCharacterExtra(_In_ HDC hdc);
WINGDIAPI UINT WINAPI GetTextAlign(_In_ HDC hdc);
WINGDIAPI COLORREF WINAPI GetTextColor(_In_ HDC hdc);
WINGDIAPI BOOL APIENTRY GetTextExtentPointA(_In_ HDC hdc, _In_reads_(c) LPCSTR lpString, _In_ int c, _Out_ LPSIZE lpsz);
WINGDIAPI BOOL APIENTRY GetTextExtentPointW(_In_ HDC hdc, _In_reads_(c) LPCWSTR lpString, _In_ int c, _Out_ LPSIZE lpsz);
WINGDIAPI BOOL APIENTRY GetTextExtentPoint32A(_In_ HDC hdc, _In_reads_(c) LPCSTR lpString, _In_ int c, _Out_ LPSIZE psizl);
WINGDIAPI BOOL APIENTRY GetTextExtentPoint32W(_In_ HDC hdc, _In_reads_(c) LPCWSTR lpString, _In_ int c, _Out_ LPSIZE psizl);
WINGDIAPI BOOL APIENTRY GetTextExtentExPointA(_In_ HDC hdc, _In_reads_(cchString) LPCSTR lpszString, _In_ int cchString, _In_ int nMaxExtent, _Out_opt_ LPINT lpnFit, _Out_writes_to_opt_ (cchString, *lpnFit) LPINT lpnDx, _Out_ LPSIZE lpSize);
WINGDIAPI BOOL APIENTRY GetTextExtentExPointW(_In_ HDC hdc, _In_reads_(cchString) LPCWSTR lpszString, _In_ int cchString, _In_ int nMaxExtent, _Out_opt_ LPINT lpnFit, _Out_writes_to_opt_ (cchString, *lpnFit) LPINT lpnDx, _Out_ LPSIZE lpSize);
WINGDIAPI int WINAPI GetTextCharset(_In_ HDC hdc);
WINGDIAPI int WINAPI GetTextCharsetInfo(_In_ HDC hdc, _Out_opt_ LPFONTSIGNATURE lpSig, _In_ DWORD dwFlags);
WINGDIAPI BOOL WINAPI TranslateCharsetInfo(_Inout_ DWORD *lpSrc, _Out_ LPCHARSETINFO lpCs, _In_ DWORD dwFlags);
WINGDIAPI DWORD WINAPI GetFontLanguageInfo(_In_ HDC hdc);
WINGDIAPI DWORD WINAPI GetCharacterPlacementA(_In_ HDC hdc, _In_reads_(nCount) LPCSTR lpString, _In_ int nCount, _In_ int nMexExtent, _Inout_ LPGCP_RESULTSA lpResults, _In_ DWORD dwFlags);
WINGDIAPI DWORD WINAPI GetCharacterPlacementW(_In_ HDC hdc, _In_reads_(nCount) LPCWSTR lpString, _In_ int nCount, _In_ int nMexExtent, _Inout_ LPGCP_RESULTSW lpResults, _In_ DWORD dwFlags);
WINGDIAPI DWORD WINAPI GetFontUnicodeRanges(_In_ HDC hdc, _Out_opt_ LPGLYPHSET lpgs);
WINGDIAPI DWORD WINAPI GetGlyphIndicesA(_In_ HDC hdc, _In_reads_(c) LPCSTR lpstr, _In_ int c, _Out_writes_(c) LPWORD pgi, _In_ DWORD fl);
WINGDIAPI DWORD WINAPI GetGlyphIndicesW(_In_ HDC hdc, _In_reads_(c) LPCWSTR lpstr, _In_ int c, _Out_writes_(c) LPWORD pgi, _In_ DWORD fl);
WINGDIAPI BOOL WINAPI GetTextExtentPointI(_In_ HDC hdc, _In_reads_(cgi) LPWORD pgiIn, _In_ int cgi, _Out_ LPSIZE psize);
WINGDIAPI BOOL WINAPI GetTextExtentExPointI (_In_ HDC hdc, _In_reads_(cwchString) LPWORD lpwszString, _In_ int cwchString, _In_ int nMaxExtent, _Out_opt_ LPINT lpnFit, _Out_writes_to_opt_(cwchString, *lpnFit) LPINT lpnDx, _Out_ LPSIZE lpSize);
WINGDIAPI BOOL WINAPI GetCharWidthI(_In_ HDC hdc, _In_ UINT giFirst, _In_ UINT cgi, _In_reads_opt_(cgi) LPWORD pgi, _Out_writes_(cgi) LPINT piWidths);
WINGDIAPI BOOL WINAPI GetCharABCWidthsI(_In_ HDC hdc, _In_ UINT giFirst, _In_ UINT cgi, _In_reads_opt_(cgi) LPWORD pgi, _Out_writes_(cgi) LPABC pabc);
WINGDIAPI int WINAPI AddFontResourceExA(_In_ LPCSTR name, _In_ DWORD fl, _Reserved_ PVOID res);
WINGDIAPI int WINAPI AddFontResourceExW(_In_ LPCWSTR name, _In_ DWORD fl, _Reserved_ PVOID res);
WINGDIAPI BOOL WINAPI RemoveFontResourceExA(_In_ LPCSTR name, _In_ DWORD fl, _Reserved_ PVOID pdv);
WINGDIAPI BOOL WINAPI RemoveFontResourceExW(_In_ LPCWSTR name, _In_ DWORD fl, _Reserved_ PVOID pdv);
WINGDIAPI HANDLE WINAPI AddFontMemResourceEx(_In_reads_bytes_(cjSize) PVOID pFileView, _In_ DWORD cjSize, _Reserved_ PVOID pvResrved,_In_ DWORD* pNumFonts);
WINGDIAPI BOOL WINAPI RemoveFontMemResourceEx(_In_ HANDLE h);
WINGDIAPI HFONT WINAPI CreateFontIndirectExA(_In_ CONST ENUMLOGFONTEXDVA *);
WINGDIAPI HFONT WINAPI CreateFontIndirectExW(_In_ CONST ENUMLOGFONTEXDVW *);
WINGDIAPI BOOL WINAPI GetViewportExtEx(_In_ HDC hdc, _Out_ LPSIZE lpsize);
WINGDIAPI BOOL WINAPI GetViewportOrgEx(_In_ HDC hdc, _Out_ LPPOINT lppoint);
WINGDIAPI BOOL WINAPI GetWindowExtEx(_In_ HDC hdc, _Out_ LPSIZE lpsize);
WINGDIAPI BOOL WINAPI GetWindowOrgEx(_In_ HDC hdc, _Out_ LPPOINT lppoint);
WINGDIAPI int WINAPI IntersectClipRect(_In_ HDC hdc, _In_ int left, _In_ int top, _In_ int right, _In_ int bottom);
WINGDIAPI BOOL WINAPI InvertRgn(_In_ HDC hdc, _In_ HRGN hrgn);
WINGDIAPI BOOL WINAPI LineDDA(_In_ int xStart, _In_ int yStart, _In_ int xEnd, _In_ int yEnd, _In_ LINEDDAPROC lpProc, _In_opt_ LPARAM data);
WINGDIAPI BOOL WINAPI LineTo(_In_ HDC hdc, _In_ int x, _In_ int y);
WINGDIAPI BOOL WINAPI MaskBlt(_In_ HDC hdcDest, _In_ int xDest, _In_ int yDest, _In_ int width, _In_ int height,_In_ HDC hdcSrc, _In_ int xSrc, _In_ int ySrc, _In_ HBITMAP hbmMask, _In_ int xMask, _In_ int yMask, _In_ DWORD rop);
WINGDIAPI BOOL WINAPI PlgBlt(_In_ HDC hdcDest, _In_reads_(3) CONST POINT * lpPoint, _In_ HDC hdcSrc, _In_ int xSrc, _In_ int ySrc, _In_ int width,_In_ int height, _In_opt_ HBITMAP hbmMask, _In_ int xMask, _In_ int yMask);
WINGDIAPI int WINAPI OffsetClipRgn(_In_ HDC hdc, _In_ int x, _In_ int y);
WINGDIAPI int WINAPI OffsetRgn(_In_ HRGN hrgn, _In_ int x, _In_ int y);
WINGDIAPI BOOL WINAPI PatBlt(_In_ HDC hdc, _In_ int x, _In_ int y, _In_ int w, _In_ int h, _In_ DWORD rop);
WINGDIAPI BOOL WINAPI Pie(_In_ HDC hdc, _In_ int left, _In_ int top, _In_ int right, _In_ int bottom, _In_ int xr1, _In_ int yr1, _In_ int xr2, _In_ int yr2);
WINGDIAPI BOOL WINAPI PlayMetaFile(_In_ HDC hdc, _In_ HMETAFILE hmf);
WINGDIAPI BOOL WINAPI PaintRgn(_In_ HDC hdc, _In_ HRGN hrgn);
WINGDIAPI BOOL WINAPI PolyPolygon(_In_ HDC hdc, _In_ CONST POINT *apt, _In_reads_(csz) CONST INT *asz, _In_ int csz);
WINGDIAPI BOOL WINAPI PtInRegion(_In_ HRGN hrgn, _In_ int x, _In_ int y);
WINGDIAPI BOOL WINAPI PtVisible(_In_ HDC hdc, _In_ int x, _In_ int y);
WINGDIAPI BOOL WINAPI RectInRegion(_In_ HRGN hrgn, _In_ CONST RECT * lprect);
WINGDIAPI BOOL WINAPI RectVisible(_In_ HDC hdc, _In_ CONST RECT * lprect);
WINGDIAPI BOOL WINAPI Rectangle(_In_ HDC hdc, _In_ int left, _In_ int top, _In_ int right, _In_ int bottom);
WINGDIAPI BOOL WINAPI RestoreDC(_In_ HDC hdc, _In_ int nSavedDC);
WINGDIAPI HDC WINAPI ResetDCA(_In_ HDC hdc, _In_ CONST DEVMODEA * lpdm);
WINGDIAPI HDC WINAPI ResetDCW(_In_ HDC hdc, _In_ CONST DEVMODEW * lpdm);
WINGDIAPI UINT WINAPI RealizePalette(_In_ HDC hdc);
WINGDIAPI BOOL WINAPI RemoveFontResourceA(_In_ LPCSTR lpFileName);
WINGDIAPI BOOL WINAPI RemoveFontResourceW(_In_ LPCWSTR lpFileName);
WINGDIAPI BOOL WINAPI RoundRect(_In_ HDC hdc, _In_ int left, _In_ int top, _In_ int right, _In_ int bottom, _In_ int width, _In_ int height);
WINGDIAPI BOOL WINAPI ResizePalette(_In_ HPALETTE hpal, _In_ UINT n);
WINGDIAPI int WINAPI SaveDC(_In_ HDC hdc);
WINGDIAPI int WINAPI SelectClipRgn(_In_ HDC hdc, _In_opt_ HRGN hrgn);
WINGDIAPI int WINAPI ExtSelectClipRgn(_In_ HDC hdc, _In_opt_ HRGN hrgn, _In_ int mode);
WINGDIAPI int WINAPI SetMetaRgn(_In_ HDC hdc);
WINGDIAPI HGDIOBJ WINAPI SelectObject(_In_ HDC hdc, _In_ HGDIOBJ h);
WINGDIAPI HPALETTE WINAPI SelectPalette(_In_ HDC hdc, _In_ HPALETTE hPal, _In_ BOOL bForceBkgd);
WINGDIAPI COLORREF WINAPI SetBkColor(_In_ HDC hdc, _In_ COLORREF color);
WINGDIAPI COLORREF WINAPI SetDCBrushColor(_In_ HDC hdc, _In_ COLORREF color);
WINGDIAPI COLORREF WINAPI SetDCPenColor(_In_ HDC hdc, _In_ COLORREF color);
WINGDIAPI int WINAPI SetBkMode(_In_ HDC hdc, _In_ int mode);
WINGDIAPI LONG WINAPI SetBitmapBits(_In_ HBITMAP hbm, _In_ DWORD cb,_In_reads_bytes_(cb) CONST VOID *pvBits);
WINGDIAPI UINT WINAPI SetBoundsRect(_In_ HDC hdc, _In_opt_ CONST RECT * lprect, _In_ UINT flags);
WINGDIAPI int WINAPI SetDIBits(_In_opt_ HDC hdc, _In_ HBITMAP hbm, _In_ UINT start, _In_ UINT cLines, _In_ CONST VOID *lpBits, _In_ CONST BITMAPINFO * lpbmi, _In_ UINT ColorUse);
WINGDIAPI int WINAPI SetDIBitsToDevice(_In_ HDC hdc, _In_ int xDest, _In_ int yDest, _In_ DWORD w, _In_ DWORD h, _In_ int xSrc,_In_ int ySrc, _In_ UINT StartScan, _In_ UINT cLines, _In_ CONST VOID * lpvBits, _In_ CONST BITMAPINFO * lpbmi, _In_ UINT ColorUse);
WINGDIAPI DWORD WINAPI SetMapperFlags(_In_ HDC hdc, _In_ DWORD flags);
WINGDIAPI int WINAPI SetGraphicsMode(_In_ HDC hdc, _In_ int iMode);
WINGDIAPI int WINAPI SetMapMode(_In_ HDC hdc, _In_ int iMode);
WINGDIAPI DWORD WINAPI SetLayout(_In_ HDC hdc, _In_ DWORD l);
WINGDIAPI DWORD WINAPI GetLayout(_In_ HDC hdc);
WINGDIAPI HMETAFILE WINAPI SetMetaFileBitsEx(_In_ UINT cbBuffer, _In_reads_bytes_(cbBuffer) CONST BYTE *lpData);
WINGDIAPI UINT WINAPI SetPaletteEntries(_In_ HPALETTE hpal, _In_ UINT iStart, _In_ UINT cEntries,_In_reads_(cEntries) CONST PALETTEENTRY *pPalEntries);
WINGDIAPI COLORREF WINAPI SetPixel(_In_ HDC hdc, _In_ int x, _In_ int y, _In_ COLORREF color);
WINGDIAPI BOOL WINAPI SetPixelV(_In_ HDC hdc, _In_ int x, _In_ int y, _In_ COLORREF color);
WINGDIAPI BOOL WINAPI SetPixelFormat(_In_ HDC hdc, _In_ int format, _In_ CONST PIXELFORMATDESCRIPTOR * ppfd);
WINGDIAPI int WINAPI SetPolyFillMode(_In_ HDC hdc, _In_ int mode);
WINGDIAPI BOOL WINAPI StretchBlt(_In_ HDC hdcDest, _In_ int xDest, _In_ int yDest, _In_ int wDest, _In_ int hDest, _In_opt_ HDC hdcSrc, _In_ int xSrc, _In_ int ySrc, _In_ int wSrc, _In_ int hSrc, _In_ DWORD rop);
WINGDIAPI BOOL WINAPI SetRectRgn(_In_ HRGN hrgn, _In_ int left, _In_ int top, _In_ int right, _In_ int bottom);
WINGDIAPI int WINAPI StretchDIBits(_In_ HDC hdc, _In_ int xDest, _In_ int yDest, _In_ int DestWidth, _In_ int DestHeight, _In_ int xSrc, _In_ int ySrc, _In_ int SrcWidth, _In_ int SrcHeight,_In_opt_ CONST VOID * lpBits, _In_ CONST BITMAPINFO * lpbmi, _In_ UINT iUsage, _In_ DWORD rop);
WINGDIAPI int WINAPI SetROP2(_In_ HDC hdc, _In_ int rop2);
WINGDIAPI int WINAPI SetStretchBltMode(_In_ HDC hdc, _In_ int mode);
WINGDIAPI UINT WINAPI SetSystemPaletteUse(_In_ HDC hdc, _In_ UINT use);
WINGDIAPI int WINAPI SetTextCharacterExtra(_In_ HDC hdc, _In_ int extra);
WINGDIAPI COLORREF WINAPI SetTextColor(_In_ HDC hdc, _In_ COLORREF color);
WINGDIAPI UINT WINAPI SetTextAlign(_In_ HDC hdc, _In_ UINT align);
WINGDIAPI BOOL WINAPI SetTextJustification(_In_ HDC hdc, _In_ int extra, _In_ int count);
WINGDIAPI BOOL WINAPI UpdateColors(_In_ HDC hdc);
WINGDIAPI BOOL WINAPI GdiRegisterDdraw(_In_ PGDIREGISTERDDRAWPACKET pPacket, _Out_ GDIMARSHALLOC *ppfnGdiAlloc);
WINGDIAPI ULONG WINAPI GdiMarshalSize(VOID);
WINGDIAPI VOID WINAPI GdiMarshal(DWORD dwProcessIdTo, _In_ HGDIOBJ hGdiObj, _Inout_ PVOID pData, ULONG ulFlags);
WINGDIAPI HGDIOBJ WINAPI GdiUnmarshal(_In_ PVOID pData, ULONG ulFlags);
WINGDIAPI BOOL WINAPI AlphaBlend(_In_ HDC hdcDest, _In_ int xoriginDest, _In_ int yoriginDest, _In_ int wDest, _In_ int hDest, _In_ HDC hdcSrc, _In_ int xoriginSrc, _In_ int yoriginSrc, _In_ int wSrc, _In_ int hSrc,_In_ BLENDFUNCTION ftn);
WINGDIAPI BOOL WINAPI TransparentBlt(_In_ HDC hdcDest, _In_ int xoriginDest, _In_ int yoriginDest, _In_ int wDest, _In_ int hDest, _In_ HDC hdcSrc, _In_ int xoriginSrc, _In_ int yoriginSrc, _In_ int wSrc, _In_ int hSrc,_In_ UINT crTransparent);
WINGDIAPI BOOL WINAPI GradientFill(_In_ HDC hdc, _In_reads_(nVertex) PTRIVERTEX pVertex, _In_ ULONG nVertex, _In_ PVOID pMesh, _In_ ULONG nMesh, _In_ ULONG ulMode);
WINGDIAPI BOOL WINAPI GdiAlphaBlend(_In_ HDC hdcDest, _In_ int xoriginDest, _In_ int yoriginDest, _In_ int wDest, _In_ int hDest, _In_ HDC hdcSrc, _In_ int xoriginSrc, _In_ int yoriginSrc, _In_ int wSrc, _In_ int hSrc, _In_ BLENDFUNCTION ftn);
WINGDIAPI BOOL WINAPI GdiTransparentBlt(_In_ HDC hdcDest,_In_ int xoriginDest, _In_ int yoriginDest, _In_ int wDest, _In_ int hDest, _In_ HDC hdcSrc,_In_ int xoriginSrc, _In_ int yoriginSrc, _In_ int wSrc, _In_ int hSrc, _In_ UINT crTransparent);
WINGDIAPI BOOL WINAPI GdiGradientFill(_In_ HDC hdc, _In_reads_(nVertex) PTRIVERTEX pVertex, _In_ ULONG nVertex, _In_ PVOID pMesh, _In_ ULONG nCount,_In_ ULONG ulMode);
WINGDIAPI BOOL WINAPI PlayMetaFileRecord(_In_ HDC hdc, _In_reads_(noObjs) LPHANDLETABLE lpHandleTable, _In_ LPMETARECORD lpMR,_In_ UINT noObjs);
WINGDIAPI BOOL WINAPI EnumMetaFile(_In_ HDC hdc, _In_ HMETAFILE hmf, _In_ MFENUMPROC proc, _In_opt_ LPARAM param);
WINGDIAPI HENHMETAFILE WINAPI CloseEnhMetaFile(_In_ HDC hdc);
WINGDIAPI HENHMETAFILE WINAPI CopyEnhMetaFileA(_In_ HENHMETAFILE hEnh, _In_opt_ LPCSTR lpFileName);
WINGDIAPI HENHMETAFILE WINAPI CopyEnhMetaFileW(_In_ HENHMETAFILE hEnh, _In_opt_ LPCWSTR lpFileName);
WINGDIAPI HDC WINAPI CreateEnhMetaFileA(_In_opt_ HDC hdc, _In_opt_ LPCSTR lpFilename, _In_opt_ CONST RECT *lprc, _In_opt_ LPCSTR lpDesc);
WINGDIAPI HDC WINAPI CreateEnhMetaFileW(_In_opt_ HDC hdc, _In_opt_ LPCWSTR lpFilename, _In_opt_ CONST RECT *lprc, _In_opt_ LPCWSTR lpDesc);
WINGDIAPI BOOL WINAPI DeleteEnhMetaFile(_In_opt_ HENHMETAFILE hmf);
WINGDIAPI BOOL WINAPI EnumEnhMetaFile(_In_opt_ HDC hdc, _In_ HENHMETAFILE hmf, _In_ ENHMFENUMPROC proc,_In_opt_ LPVOID param, _In_opt_ CONST RECT * lpRect);
WINGDIAPI HENHMETAFILE WINAPI GetEnhMetaFileA(_In_ LPCSTR lpName);
WINGDIAPI HENHMETAFILE WINAPI GetEnhMetaFileW(_In_ LPCWSTR lpName);
WINGDIAPI UINT WINAPI GetEnhMetaFileBits(_In_ HENHMETAFILE hEMF, _In_ UINT nSize,_Out_writes_bytes_opt_(nSize) LPBYTE lpData);
WINGDIAPI UINT WINAPI GetEnhMetaFileDescriptionA(_In_ HENHMETAFILE hemf, _In_ UINT cchBuffer,_Out_writes_opt_(cchBuffer) LPSTR lpDescription);
WINGDIAPI UINT WINAPI GetEnhMetaFileDescriptionW(_In_ HENHMETAFILE hemf, _In_ UINT cchBuffer,_Out_writes_opt_(cchBuffer) LPWSTR lpDescription);
WINGDIAPI UINT WINAPI GetEnhMetaFileHeader(_In_ HENHMETAFILE hemf, _In_ UINT nSize,_Out_writes_bytes_opt_(nSize) LPENHMETAHEADER lpEnhMetaHeader);
WINGDIAPI UINT WINAPI GetEnhMetaFilePaletteEntries(_In_ HENHMETAFILE hemf, _In_ UINT nNumEntries,_Out_writes_opt_(nNumEntries) LPPALETTEENTRY lpPaletteEntries);
WINGDIAPI UINT WINAPI GetEnhMetaFilePixelFormat(_In_ HENHMETAFILE hemf, _In_ UINT cbBuffer,_Out_writes_bytes_opt_(cbBuffer) PIXELFORMATDESCRIPTOR *ppfd);
WINGDIAPI UINT WINAPI GetWinMetaFileBits(_In_ HENHMETAFILE hemf, _In_ UINT cbData16, _Out_writes_bytes_opt_(cbData16) LPBYTE pData16, _In_ INT iMapMode,_In_ HDC hdcRef);
WINGDIAPI BOOL WINAPI PlayEnhMetaFile(_In_ HDC hdc, _In_ HENHMETAFILE hmf, _In_ CONST RECT * lprect);
WINGDIAPI BOOL WINAPI PlayEnhMetaFileRecord(_In_ HDC hdc, _In_reads_(cht) LPHANDLETABLE pht, _In_ CONST ENHMETARECORD *pmr,_In_ UINT cht);
WINGDIAPI HENHMETAFILE WINAPI SetEnhMetaFileBits(_In_ UINT nSize,_In_reads_bytes_(nSize) CONST BYTE * pb);
WINGDIAPI HENHMETAFILE WINAPI SetWinMetaFileBits(_In_ UINT nSize, _In_reads_bytes_(nSize) CONST BYTE *lpMeta16Data, _In_opt_ HDC hdcRef,_In_opt_ CONST METAFILEPICT *lpMFP);
WINGDIAPI BOOL WINAPI GdiComment(_In_ HDC hdc, _In_ UINT nSize, _In_reads_bytes_(nSize) CONST BYTE *lpData);
WINGDIAPI BOOL WINAPI GetTextMetricsA(_In_ HDC hdc, _Out_ LPTEXTMETRICA lptm);
WINGDIAPI BOOL WINAPI GetTextMetricsW(_In_ HDC hdc, _Out_ LPTEXTMETRICW lptm);
WINGDIAPI BOOL WINAPI AngleArc(_In_ HDC hdc, _In_ int x, _In_ int y, _In_ DWORD r, _In_ FLOAT StartAngle, _In_ FLOAT SweepAngle);
WINGDIAPI BOOL WINAPI PolyPolyline(_In_ HDC hdc, _In_ CONST POINT *apt, _In_reads_(csz) CONST DWORD *asz, _In_ DWORD csz);
WINGDIAPI BOOL WINAPI GetWorldTransform(_In_ HDC hdc, _Out_ LPXFORM lpxf);
WINGDIAPI BOOL WINAPI SetWorldTransform(_In_ HDC hdc, _In_ CONST XFORM * lpxf);
WINGDIAPI BOOL WINAPI ModifyWorldTransform(_In_ HDC hdc, _In_opt_ CONST XFORM * lpxf, _In_ DWORD mode);
WINGDIAPI BOOL WINAPI CombineTransform(_Out_ LPXFORM lpxfOut, _In_ CONST XFORM *lpxf1, _In_ CONST XFORM *lpxf2);
WINGDIAPI HBITMAP WINAPI CreateDIBSection(_In_opt_ HDC hdc, _In_ CONST BITMAPINFO *pbmi, _In_ UINT usage, _When_((pbmi->bmiHeader.biBitCount != 0), _Outptr_result_bytebuffer_(_Inexpressible_(GDI_DIBSIZE((pbmi->bmiHeader))))) _When_((pbmi->bmiHeader.biBitCount == 0), _Outptr_result_bytebuffer_((pbmi->bmiHeader).biSizeImage)) VOID **ppvBits, _In_opt_ HANDLE hSection,_In_ DWORD offset);
WINGDIAPI UINT WINAPI GetDIBColorTable(_In_ HDC hdc, _In_ UINT iStart, _In_ UINT cEntries,_Out_writes_to_(cEntries,return) RGBQUAD *prgbq);
WINGDIAPI UINT WINAPI SetDIBColorTable(_In_ HDC hdc, _In_ UINT iStart, _In_ UINT cEntries,_In_reads_(cEntries) CONST RGBQUAD *prgbq);
WINGDIAPI BOOL WINAPI SetColorAdjustment(_In_ HDC hdc, _In_ CONST COLORADJUSTMENT *lpca);
WINGDIAPI BOOL WINAPI GetColorAdjustment(_In_ HDC hdc, _Out_ LPCOLORADJUSTMENT lpca);
WINGDIAPI HPALETTE WINAPI CreateHalftonePalette(_In_opt_ HDC hdc);
WINGDIAPI int WINAPI StartDocA(_In_ HDC hdc, _In_ CONST DOCINFOA *lpdi);
WINGDIAPI int WINAPI StartDocW(_In_ HDC hdc, _In_ CONST DOCINFOW *lpdi);
WINGDIAPI int WINAPI EndDoc(_In_ HDC hdc);
WINGDIAPI int WINAPI StartPage(_In_ HDC hdc);
WINGDIAPI int WINAPI EndPage(_In_ HDC hdc);
WINGDIAPI int WINAPI AbortDoc(_In_ HDC hdc);
WINGDIAPI int WINAPI SetAbortProc(_In_ HDC hdc, _In_ ABORTPROC proc);
WINGDIAPI BOOL WINAPI AbortPath(_In_ HDC hdc);
WINGDIAPI BOOL WINAPI ArcTo(_In_ HDC hdc, _In_ int left, _In_ int top, _In_ int right, _In_ int bottom, _In_ int xr1, _In_ int yr1, _In_ int xr2, _In_ int yr2);
WINGDIAPI BOOL WINAPI BeginPath(_In_ HDC hdc);
WINGDIAPI BOOL WINAPI CloseFigure(_In_ HDC hdc);
WINGDIAPI BOOL WINAPI EndPath(_In_ HDC hdc);
WINGDIAPI BOOL WINAPI FillPath(_In_ HDC hdc);
WINGDIAPI BOOL WINAPI FlattenPath(_In_ HDC hdc);
WINGDIAPI int WINAPI GetPath(_In_ HDC hdc, _Out_writes_opt_(cpt) LPPOINT apt, _Out_writes_opt_(cpt) LPBYTE aj, int cpt);
WINGDIAPI HRGN WINAPI PathToRegion(_In_ HDC hdc);
WINGDIAPI BOOL WINAPI PolyDraw(_In_ HDC hdc, _In_reads_(cpt) CONST POINT * apt, _In_reads_(cpt) CONST BYTE * aj, _In_ int cpt);
WINGDIAPI BOOL WINAPI SelectClipPath(_In_ HDC hdc, _In_ int mode);
WINGDIAPI int WINAPI SetArcDirection(_In_ HDC hdc, _In_ int dir);
WINGDIAPI BOOL WINAPI SetMiterLimit(_In_ HDC hdc, _In_ FLOAT limit, _Out_opt_ PFLOAT old);
WINGDIAPI BOOL WINAPI StrokeAndFillPath(_In_ HDC hdc);
WINGDIAPI BOOL WINAPI StrokePath(_In_ HDC hdc);
WINGDIAPI BOOL WINAPI WidenPath(_In_ HDC hdc);
WINGDIAPI HPEN WINAPI ExtCreatePen(_In_ DWORD iPenStyle, _In_ DWORD cWidth, _In_ CONST LOGBRUSH *plbrush, _In_ DWORD cStyle,_In_reads_opt_(cStyle) CONST DWORD *pstyle);
WINGDIAPI BOOL WINAPI GetMiterLimit(_In_ HDC hdc, _Out_ PFLOAT plimit);
WINGDIAPI int WINAPI GetArcDirection(_In_ HDC hdc);
WINGDIAPI int WINAPI GetObjectA(_In_ HANDLE h, _In_ int c, _Out_writes_bytes_opt_(c) LPVOID pv);
WINGDIAPI int WINAPI GetObjectW(_In_ HANDLE h, _In_ int c, _Out_writes_bytes_opt_(c) LPVOID pv);
WINGDIAPI BOOL WINAPI MoveToEx(_In_ HDC hdc, _In_ int x, _In_ int y, _Out_opt_ LPPOINT lppt);
WINGDIAPI BOOL WINAPI TextOutA(_In_ HDC hdc, _In_ int x, _In_ int y, _In_reads_(c) LPCSTR lpString, _In_ int c);
WINGDIAPI BOOL WINAPI TextOutW(_In_ HDC hdc, _In_ int x, _In_ int y, _In_reads_(c) LPCWSTR lpString, _In_ int c);
WINGDIAPI BOOL WINAPI ExtTextOutA(_In_ HDC hdc, _In_ int x, _In_ int y, _In_ UINT options, _In_opt_ CONST RECT * lprect, _In_reads_opt_(c) LPCSTR lpString, _In_ UINT c, _In_reads_opt_(c) CONST INT * lpDx);
WINGDIAPI BOOL WINAPI ExtTextOutW(_In_ HDC hdc, _In_ int x, _In_ int y, _In_ UINT options, _In_opt_ CONST RECT * lprect, _In_reads_opt_(c) LPCWSTR lpString, _In_ UINT c, _In_reads_opt_(c) CONST INT * lpDx);
WINGDIAPI BOOL WINAPI PolyTextOutA(_In_ HDC hdc, _In_reads_(nstrings) CONST POLYTEXTA * ppt, _In_ int nstrings);
WINGDIAPI BOOL WINAPI PolyTextOutW(_In_ HDC hdc, _In_reads_(nstrings) CONST POLYTEXTW * ppt, _In_ int nstrings);
WINGDIAPI HRGN WINAPI CreatePolygonRgn(_In_reads_(cPoint) CONST POINT *pptl, _In_ int cPoint,_In_ int iMode);
WINGDIAPI BOOL WINAPI DPtoLP(_In_ HDC hdc, _Inout_updates_(c) LPPOINT lppt, _In_ int c);
WINGDIAPI BOOL WINAPI LPtoDP(_In_ HDC hdc, _Inout_updates_(c) LPPOINT lppt, _In_ int c);
WINGDIAPI BOOL WINAPI Polygon(_In_ HDC hdc, _In_reads_(cpt) CONST POINT *apt, _In_ int cpt);
WINGDIAPI BOOL WINAPI Polyline(_In_ HDC hdc, _In_reads_(cpt) CONST POINT *apt, _In_ int cpt);
WINGDIAPI BOOL WINAPI PolyBezier(_In_ HDC hdc, _In_reads_(cpt) CONST POINT * apt, _In_ DWORD cpt);
WINGDIAPI BOOL WINAPI PolyBezierTo(_In_ HDC hdc, _In_reads_(cpt) CONST POINT * apt, _In_ DWORD cpt);
WINGDIAPI BOOL WINAPI PolylineTo(_In_ HDC hdc, _In_reads_(cpt) CONST POINT * apt, _In_ DWORD cpt);
WINGDIAPI BOOL WINAPI SetViewportExtEx(_In_ HDC hdc, _In_ int x, _In_ int y, _Out_opt_ LPSIZE lpsz);
WINGDIAPI BOOL WINAPI SetViewportOrgEx(_In_ HDC hdc, _In_ int x, _In_ int y, _Out_opt_ LPPOINT lppt);
WINGDIAPI BOOL WINAPI SetWindowExtEx(_In_ HDC hdc, _In_ int x, _In_ int y, _Out_opt_ LPSIZE lpsz);
WINGDIAPI BOOL WINAPI SetWindowOrgEx(_In_ HDC hdc, _In_ int x, _In_ int y, _Out_opt_ LPPOINT lppt);
WINGDIAPI BOOL WINAPI OffsetViewportOrgEx(_In_ HDC hdc, _In_ int x, _In_ int y, _Out_opt_ LPPOINT lppt);
WINGDIAPI BOOL WINAPI OffsetWindowOrgEx(_In_ HDC hdc, _In_ int x, _In_ int y, _Out_opt_ LPPOINT lppt);
WINGDIAPI BOOL WINAPI ScaleViewportExtEx(_In_ HDC hdc, _In_ int xn, _In_ int dx, _In_ int yn, _In_ int yd, _Out_opt_ LPSIZE lpsz);
WINGDIAPI BOOL WINAPI ScaleWindowExtEx(_In_ HDC hdc, _In_ int xn, _In_ int xd, _In_ int yn, _In_ int yd, _Out_opt_ LPSIZE lpsz);
WINGDIAPI BOOL WINAPI SetBitmapDimensionEx(_In_ HBITMAP hbm, _In_ int w, _In_ int h, _Out_opt_ LPSIZE lpsz);
WINGDIAPI BOOL WINAPI SetBrushOrgEx(_In_ HDC hdc, _In_ int x, _In_ int y, _Out_opt_ LPPOINT lppt);
WINGDIAPI int WINAPI GetTextFaceA(_In_ HDC hdc, _In_ int c, _Out_writes_to_opt_(c, return) LPSTR lpName);
WINGDIAPI int WINAPI GetTextFaceW(_In_ HDC hdc, _In_ int c, _Out_writes_to_opt_(c, return) LPWSTR lpName);
WINGDIAPI DWORD WINAPI GetKerningPairsA(_In_ HDC hdc, _In_ DWORD nPairs,_Out_writes_to_opt_(nPairs, return) LPKERNINGPAIR lpKernPair);
WINGDIAPI DWORD WINAPI GetKerningPairsW(_In_ HDC hdc, _In_ DWORD nPairs,_Out_writes_to_opt_(nPairs, return) LPKERNINGPAIR lpKernPair);
WINGDIAPI BOOL WINAPI GetDCOrgEx(_In_ HDC hdc, _Out_ LPPOINT lppt);
WINGDIAPI BOOL WINAPI FixBrushOrgEx(_In_ HDC hdc, _In_ int x, _In_ int y, _In_opt_ LPPOINT ptl);
WINGDIAPI BOOL WINAPI UnrealizeObject(_In_ HGDIOBJ h);
WINGDIAPI BOOL WINAPI GdiFlush(void);
WINGDIAPI DWORD WINAPI GdiSetBatchLimit(_In_ DWORD dw);
WINGDIAPI DWORD WINAPI GdiGetBatchLimit(void);
WINGDIAPI int WINAPI SetICMMode(_In_ HDC hdc, _In_ int mode);
WINGDIAPI BOOL WINAPI CheckColorsInGamut(_In_ HDC hdc, _In_reads_(nCount) LPRGBTRIPLE lpRGBTriple, _Out_writes_bytes_(nCount) LPVOID dlpBuffer,_In_ DWORD nCount);
WINGDIAPI HCOLORSPACE WINAPI GetColorSpace(_In_ HDC hdc);
WINGDIAPI BOOL WINAPI GetLogColorSpaceA(_In_ HCOLORSPACE hColorSpace, _Out_writes_bytes_(nSize) LPLOGCOLORSPACEA lpBuffer,_In_ DWORD nSize);
WINGDIAPI BOOL WINAPI GetLogColorSpaceW(_In_ HCOLORSPACE hColorSpace, _Out_writes_bytes_(nSize) LPLOGCOLORSPACEW lpBuffer,_In_ DWORD nSize);
WINGDIAPI HCOLORSPACE WINAPI CreateColorSpaceA(_In_ LPLOGCOLORSPACEA lplcs);
WINGDIAPI HCOLORSPACE WINAPI CreateColorSpaceW(_In_ LPLOGCOLORSPACEW lplcs);
WINGDIAPI HCOLORSPACE WINAPI SetColorSpace(_In_ HDC hdc, _In_ HCOLORSPACE hcs);
WINGDIAPI BOOL WINAPI DeleteColorSpace(_In_ HCOLORSPACE hcs);
WINGDIAPI BOOL WINAPI GetICMProfileA(_In_ HDC hdc, _Inout_ LPDWORD pBufSize,_Out_writes_opt_(*pBufSize) LPSTR pszFilename);
WINGDIAPI BOOL WINAPI GetICMProfileW(_In_ HDC hdc, _Inout_ LPDWORD pBufSize,_Out_writes_opt_(*pBufSize) LPWSTR pszFilename);
WINGDIAPI BOOL WINAPI SetICMProfileA(_In_ HDC hdc, _In_ LPSTR lpFileName);
WINGDIAPI BOOL WINAPI SetICMProfileW(_In_ HDC hdc, _In_ LPWSTR lpFileName);
WINGDIAPI BOOL WINAPI GetDeviceGammaRamp(_In_ HDC hdc, _Out_writes_bytes_(3*256*2) LPVOID lpRamp);
WINGDIAPI BOOL WINAPI SetDeviceGammaRamp(_In_ HDC hdc, _In_reads_bytes_(3*256*2) LPVOID lpRamp);
WINGDIAPI BOOL WINAPI ColorMatchToTarget(_In_ HDC hdc, _In_ HDC hdcTarget, _In_ DWORD action);
WINGDIAPI int WINAPI EnumICMProfilesA(_In_ HDC hdc, _In_ ICMENUMPROCA proc, _In_opt_ LPARAM param);
WINGDIAPI int WINAPI EnumICMProfilesW(_In_ HDC hdc, _In_ ICMENUMPROCW proc, _In_opt_ LPARAM param);
WINGDIAPI BOOL WINAPI UpdateICMRegKeyA(_Reserved_ DWORD reserved, _In_ LPSTR lpszCMID, _In_ LPSTR lpszFileName, _In_ UINT command);
WINGDIAPI BOOL WINAPI UpdateICMRegKeyW(_Reserved_ DWORD reserved, _In_ LPWSTR lpszCMID, _In_ LPWSTR lpszFileName, _In_ UINT command);
WINGDIAPI BOOL WINAPI ColorCorrectPalette(_In_ HDC hdc, _In_ HPALETTE hPal, _In_ DWORD deFirst, _In_ DWORD num);
WINGDIAPI BOOL WINAPI wglCopyContext(HGLRC, HGLRC, UINT);
WINGDIAPI HGLRC WINAPI wglCreateContext(HDC);
WINGDIAPI HGLRC WINAPI wglCreateLayerContext(HDC, int);
WINGDIAPI BOOL WINAPI wglDeleteContext(HGLRC);
WINGDIAPI HGLRC WINAPI wglGetCurrentContext(VOID);
WINGDIAPI HDC WINAPI wglGetCurrentDC(VOID);
WINGDIAPI PROC WINAPI wglGetProcAddress(LPCSTR);
WINGDIAPI BOOL WINAPI wglMakeCurrent(HDC, HGLRC);
WINGDIAPI BOOL WINAPI wglShareLists(HGLRC, HGLRC);
WINGDIAPI BOOL WINAPI wglUseFontBitmapsA(HDC, DWORD, DWORD, DWORD);
WINGDIAPI BOOL WINAPI wglUseFontBitmapsW(HDC, DWORD, DWORD, DWORD);
WINGDIAPI BOOL WINAPI SwapBuffers(HDC);
WINGDIAPI BOOL WINAPI wglUseFontOutlinesA(HDC, DWORD, DWORD, DWORD, FLOAT,FLOAT, int, LPGLYPHMETRICSFLOAT);
WINGDIAPI BOOL WINAPI wglUseFontOutlinesW(HDC, DWORD, DWORD, DWORD, FLOAT,FLOAT, int, LPGLYPHMETRICSFLOAT);
WINGDIAPI BOOL WINAPI wglDescribeLayerPlane(HDC, int, int, UINT,LPLAYERPLANEDESCRIPTOR);
WINGDIAPI int WINAPI wglSetLayerPaletteEntries(HDC, int, int, int,CONST COLORREF *);
WINGDIAPI int WINAPI wglGetLayerPaletteEntries(HDC, int, int, int,COLORREF *);
WINGDIAPI BOOL WINAPI wglRealizeLayerPalette(HDC, int, BOOL);
WINGDIAPI BOOL WINAPI wglSwapLayerBuffers(HDC, UINT);
WINGDIAPI DWORD WINAPI wglSwapMultipleBuffers(UINT, CONST WGLSWAP *);